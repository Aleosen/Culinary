import { useState } from "react";
import TipTapRedactor from "../../components/ui/TipTapRedactor";

export default function RecipeForm() {
  const [file, setFile] = useState(null);
  const [error, setError] = useState("");
  const [preview, setPreview] = useState("");
  // –î–æ–ø—É—Å—Ç–∏–º—ã–µ —Ç–∏–ø—ã –∏ –º–∞–∫—Å–∏–º–∞–ª—å–Ω—ã–π —Ä–∞–∑–º–µ—Ä (5 –ú–ë)
  const validTypes = ["image/jpeg", "image/png", "application/pdf"];
  const maxSize = 5 * 1024 * 1024; // 5 –ú–ë –≤ –±–∞–π—Ç–∞—Ö

  const handleFileChange = (e) => {
    const file = e.target.files[0];
    const selectedFile = e.target.files[0];
    if (!selectedFile) {
      setError("–§–∞–π–ª –Ω–µ –≤—ã–±—Ä–∞–Ω");
      return;
    }

    // –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ç–∏–ø–∞ —Ñ–∞–π–ª–∞
    if (!validTypes.includes(selectedFile.type)) {
      setError("–ù–µ–¥–æ–ø—É—Å—Ç–∏–º—ã–π —Ñ–æ—Ä–º–∞—Ç. –†–∞–∑—Ä–µ—à–µ–Ω—ã: JPEG, PNG, PDF");
      e.target.value = ""; // –°–±—Ä–æ—Å –≤—ã–±–æ—Ä–∞
      return;
    }

    // –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ä–∞–∑–º–µ—Ä–∞
    if (selectedFile.size > maxSize) {
      setError("–§–∞–π–ª —Å–ª–∏—à–∫–æ–º –±–æ–ª—å—à–æ–π (–º–∞–∫—Å. 5 –ú–ë)");
      e.target.value = "";
      return;
    }
    if (file && file.type.startsWith("image/")) {
        const reader = new FileReader();
        reader.onloadend = () => setPreview(reader.result);
        reader.readAsDataURL(file);
      } else {
        setPreview("");
      }
    // –ï—Å–ª–∏ –≤—Å–µ –ø—Ä–æ–≤–µ—Ä–∫–∏ –ø—Ä–æ–π–¥–µ–Ω—ã
    setError("");
    setFile(selectedFile);
  };
  return (
    <form className="lg:w-3xl mx-auto shadow-lg p-2 lg:p-20">
        <h1 className="text-3xl mb-5">–î–æ–±–∞–≤–∏—Ç—å —Ä–µ—Ü–µ–ø—Ç</h1>
        <div className="flex flex-col mb-10">
            <label htmlFor="recipeName" className="mb-1">–ù–∞–∑–≤–∞–Ω–∏–µ —Ä–µ—Ü–µ–ø—Ç–∞<span className="text-red-600">*</span></label>
            <input id='recipeName' type="text" placeholder="–°–∞–ª–∞—Ç —Ü–µ–∑–∞—Ä—å..." className="border rounded-lg py-2 px-4"/>
        </div>
        <div className="flex flex-col mb-10">
            <label htmlFor="recipeDesc" className="mb-1">–ö—Ä–∞—Ç–∫–æ–µ –æ–ø–∏—Å–∞–Ω–∏–µ</label>
            <textarea id='recipeDesc' placeholder="–ò–¥–µ–∞–ª—å–Ω—ã–π –ø–µ—Ä–µ–∫—É—Å. –í–∫—É—Å–Ω—ã–π, —Å—ã—Ç–Ω—ã–π —Å–∞–ª–∞—Ç..." className="border rounded-lg py-2 px-4 h-32"/>
        </div>
        <div className=" mb-10">
            <label htmlFor="recipeDesc" className="mb-1">–§–æ—Ç–æ–≥—Ä–∞—Ñ–∏—è –±–ª—é–¥–∞<span className="text-red-600">*</span></label>
            <div className="border border-dashed min-h-32 p-10 rounded-2xl flex flex-col items-center justify-center">
                <div className="ml-13">
                <label htmlFor="upload" className="cursor-pointer mr-2">üì∑</label>
                <input 
                type="file" 
                accept="image/*"
                id='upload'
                className="hover:cursor-pointer"
                required
                onChange={handleFileChange}
                placeholder=""
                />
                </div>
                {error && <div style={{ color: "red" }}>{error}</div>}
                {file && (
                <div>
                    <p>–í—ã–±—Ä–∞–Ω —Ñ–∞–π–ª: {file.name}</p>
                    <p>–†–∞–∑–º–µ—Ä: {(file.size / 1024 / 1024).toFixed(2)} –ú–ë</p>
                </div>
                )}
            </div>
            {preview && <img src={preview} alt="Preview" style={{ maxWidth: "300px", marginTop: "20px", borderRadius: "20px", border: "1px solid black"}} />}
        </div>
        <div className="mb-10">
        <label className="mb-1">–û–ø–∏—Å–∞–Ω–∏–µ —Ä–µ—Ü–µ–ø—Ç–∞<span className="text-red-600">*</span></label>
        <TipTapRedactor/>
      </div>
    </form>
  )
}
